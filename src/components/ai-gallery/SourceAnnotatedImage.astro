---
import ImageInfo from "./ImageInfo.astro";
import neuroglancerURL from "../../data/current-export/bia-ai-neuroglancer.json";
const { annotatedImages, sourceImage, vizarrURL} = Astro.props;

function getAttributes(image) {
  return image?.additional_metadata.find(meta =>
    meta.name.startsWith("attributes_from_file_reference")
  )?.value?.attributes || {};
}

const sourceImageAtrributes = getAttributes(sourceImage)
const sourceImageRep = sourceImage.representation.find((r) => r.image_format === ".ome.zarr");
const sourceImgS3Url = sourceImageRep?.file_uri[0].replace(vizarrURL,'') || "";
const hasNeuroGlancerURL = neuroglancerURL?.[sourceImage.uuid] || "";
---
<a href={hasNeuroGlancerURL}><button class="vf-button vf-button--primary vf-button--sm">Open overlay in Neuroglancer viewer</button></a>
<section class="vf-content">
  <div class="vf-grid">
    <div class="vf-grid__col--span-2"><iframe src={hasNeuroGlancerURL} style="height: 600px; width: 100%;border: none;"></iframe></div>
  </div>

  </div>
  <div class="vf-grid">
    <div style="min-width: 48%;">
    <ImageInfo text="Source Image" url={sourceImgS3Url} imageRep={sourceImageRep} imageAtrributes={sourceImageAtrributes} btnID="CopyURLButton"/>
    </div>
    <div style="min-width: 48%;">
      {annotatedImages.filter((img)=>!img.additional_metadata?.some(md => 
          md.value?.attributes?.["file description"] === "Visualization of groundtruth masks in PNG format" ||
            md.value?.attributes?.["file description"] === "Visualization of groundtruth for randomly selected nuclei in PNG format"))
            .map((img, index)=> {
                const imageRep = img.representation.find((r) => r.image_format === ".ome.zarr")
                return (
                  <ImageInfo text={`Annotation ${index+1}`} url={imageRep?.file_uri?.[0].replace(vizarrURL,'') || ""} imageRep={imageRep} imageAtrributes={getAttributes(img)} btnID={`CopyAnnotationButton${index+1}`}/><br>
                )
      })}
    </div>
  </div>
</section>
<script type="application/json" id="images-json" set:html={JSON.stringify(annotatedImages)} />