---
import StudyCard from '../components/cards/BrowseStudyCard.astro';
import  "../styles/toggle.css"
import "../styles/browse_controls.css"
import "../styles/filter_cards.css"
import SearchBar from "../components/SearchBar.astro";

const { query, results } = Astro.props;

---
<section class="vf-content">
  <br>
  <div class="vf-grid vf-grid__col-2" >
    <div><h2>Search results for <span class="vf-link" style="background: none;border: none;text-decoration: none;cursor: pointer;padding: 0;font: inherit;"><strong>{query}</strong></span></h3></div>
    <div>
        <div class="vf-form" style="display: flex;">
          <label for="sort" class="vf-form__label" style="flex: 1; margin:auto;margin-left: 40%">Sort by:</label>
          <select name="sort" id="sort" class="vf-form__input" style="flex: 3">
            <option value="relevance">Relevance</option>
            <option value="az">A-Z (accession ID)</option>
            <option value="za">Z-A (accession ID)</option>
          </select>
        </div>
    </div>
  </div>
</section>
<section class="vf-content">
  <div>
    {query && (
      <>
        <section class="vf-card-container | vf-card-container__col-4 | vf-u-fullbleed"  style="--vf-card__image--aspect-ratio: 16 / 9;">
        <div class="vf-card-container__inner">
        {results.length === 0 ? (
          <p>No results found.</p>
        ) : (
          results.map((item) => (
            <StudyCard
            study={item._source} studyPageRoot="study"
            />
          ))
        )}
        </div></section>
      </>
    )}
  </div>
</section>