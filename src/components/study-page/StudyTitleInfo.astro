---
import WebsiteStateButton from "../WebsiteStateButton.astro";

const { study_info: studyInfo } = Astro.props;

const authors = "author" in studyInfo ? studyInfo.author : [{ display_name: "" }];

// 1. Create a unique list of affiliations
const allAffiliations = authors.flatMap(author => author.affiliation || []);
const uniqueAffiliations = Array.from(
    new Map(allAffiliations.map(affil => [affil.display_name, affil])).values()
);

// 2. Create a map for quick lookup of institution IDs
const institutionMap = new Map();
uniqueAffiliations.forEach((affil, index) => {
    institutionMap.set(affil.display_name, index + 1);
});

function authorFormat(author) {
    let authorString = author.display_name;
    
    // Get the affiliation IDs for the current author
    const affiliationIds = author.affiliation
        ? author.affiliation.map(affil => institutionMap.get(affil.display_name))
        : [];

    // Add superscript numbers
    if (affiliationIds.length > 0) {
        authorString += `<sup>${affiliationIds.join(', ')}</sup>`;
    }

    return authorString;
}
---
<section class="vf-content | embl-grid embl-grid--has-centered-content">
    <div>

    </div>
    <div>
        <h1 class="vf-intro__heading vf-intro__heading--has-tag">
            {studyInfo.accession_id}
            <WebsiteStateButton/>
        </h1>
        <h2 class="vf-intro__subheading">{studyInfo.title}</h2>
        <p>Released {studyInfo.release_date}</p>
        <p>
            {
                authors.map((contributor, i) => (
                    // Combine elements to remove unwanted whitespace
                    <Fragment>
                        <span set:html={authorFormat(contributor)}></span>{contributor.orcid &&
                            <a href={`https://orcid.org/${contributor.orcid}`} target="_blank" rel="noopener noreferrer" style="margin-left: 0.25rem;"><img src="/src/assets/bioimage-archive/orcid.svg" alt="ORCID" style="height: 1.2em; vertical-align: middle;"/></a>
                        }{i + 1 < authors.length ? "," : ""}
                    </Fragment>
                ))
            }
        </p>
        
        <p style="color: #3B8FB6; font-size: 0.9em; font-family: 'IBM Plex Sans', sans-serif;">
            {
                uniqueAffiliations.map((affil, index) => (
                    <>
                        <sup style="margin-right: -0.25rem">{index + 1}</sup>
                        <a href={affil.website || '#'} target="_blank" rel="noopener noreferrer" style="color: inherit;">
                            {affil.display_name}
                        </a>
                        {index + 1 === uniqueAffiliations.length ? "" : " "}
                    </>
                ))
            }
        </p>
    </div>
</section>