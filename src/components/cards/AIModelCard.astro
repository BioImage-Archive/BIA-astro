---
import modelTableData from "../../data/ai-dataset-benchmarking/model-dataset-table.json"
import "../../styles/dataset_card.css"

import { formatListItem } from "../SharedJSFunctions";

const { model, modelPageUrl } = Astro.props;

const isBenchmarked = modelTableData.filter(row => (row.model === model.nickname ) && (row.annotation_data_set_uuid != null)).length > 0 ? true : false
---
<article class="vf-card vf-card--brand vf-card--bordered" data-message={`is_benchmarked: ${isBenchmarked}`}>
    <img src={ model.hero_image } alt="" class="vf-card__image" loading="lazy" style="aspect-ratio: 1/1;">
    <div class="vf-card__content | vf-stack vf-stack--400">
        <h3 class="vf-card__heading">
            <a class="vf-card__link" href={modelPageUrl} >
                { model.nickname }
                <svg aria-hidden="true" class="vf-card__heading__icon | vf-icon vf-icon-arrow--inline-end" width="1em" height="1em" xmlns="http://www.w3.org/2000/svg"><path d="M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0C5.376.008.008 5.376 0 12zm13.707-5.209l4.5 4.5a1 1 0 010 1.414l-4.5 4.5a1 1 0 01-1.414-1.414l2.366-2.367a.25.25 0 00-.177-.424H6a1 1 0 010-2h8.482a.25.25 0 00.177-.427l-2.366-2.368a1 1 0 011.414-1.414z" fill="currentColor" fill-rule="nonzero"></path></svg>
            </a>
        </h3>
        <p class="vf-card__text">
            { model.name }
        </p>
        <p class="vf-card__text">
            <b>Task:</b> { model.task }
        </p>
    

        {model.tags && model.tags.length > 0 && (
            <>
            <p class="vf-card__text">
                <b>Tags:</b> {model.tags.reduce(formatListItem, "")}
            </p>
            </>
        )}
    </div>
</article>