---
import BaseLayout from '../../layouts/BaseLayout.astro';
import field_map from "../../data/metadata-field-name-mapping.json";
import DatasetMetdata from "../../data/bia-dataset-metadata.json";
import image_data from "../../data/bia-image-export.json";
import SourceImage from "../../components/SourceImage.astro"
import DatasetDetail from '../../components/DatasetDetail.astro';

const biosample_map = field_map["biosample"];
const sipp_map = field_map["specimen_imaging_preparation_protocol"];
const image_acquisition_map = field_map["image_acquisition"];
const annotation_method_map = field_map["annotation_method"];
const protocol_map = field_map["protocol"];

export function getStaticPaths() {
  return Object.keys(image_data).map((uuid) => {
    return {
      params:  { uuid: uuid }
    };
  });
}

const { uuid } = Astro.params;

const image = image_data[uuid];

const image_dataset = DatasetMetdata[image.submission_dataset_uuid]
const image_study = image_dataset.submitted_in_study
const interactive_image = image.representation.find((rep) => rep.use_type === "INTERACTIVE_DISPLAY")
const vizarr_iframe_source = "https://uk1s3.embassy.ebi.ac.uk/bia-zarr-test/vizarr/index.html?source=" + interactive_image.file_uri[0]
const itk_link = "https://kitware.github.io/itk-vtk-viewer/app/?fileToLoad=" + interactive_image.file_uri[0]
const creation_process = image.creation_process

let specimen
if ("subject" in creation_process && creation_process.subject != null) {
    specimen = creation_process.subject
}
console.log(creation_process)

console.log(specimen)


function format_physical_dimensions(img_rep) {
    const fields = [ "physical_size_x", "physical_size_y", "physical_size_z"]
    return fields.reduce((text, field) => physical_dimensions(img_rep[field], text), "")
}

function physical_dimensions(value, text) {
    if (text === "") {
        if (value != null) {
            return value + "m"
        } else {
            return text
        }
    } else {
        if (value != null) {
            return text + " x " + value + "m"
        } else {
            return text
        }
    }
}

function format_pixel_dimensions(img_rep) {
    const fields = [ "size_x", "size_y", "size_z"]
    return fields.reduce((text, field) => pixel_dimensions(img_rep[field], text), "")
}

function pixel_dimensions(value, text) {
    if (text === "") {
        if (value != null) {
            return value
        } else {
            return text
        }
    } else {
        if (value != null) {
            return text + " x " + value
        } else {
            return text
        }
    }
}

---

<BaseLayout pageTitle={image["accession_id"] + ":" + image["alias"]}>
  <body>
    <div class="vf-stack vf-stack--500">
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div></div>
            <div>
                <h1 class="vf-intro__heading vf-intro__heading--has-tag">{ image_study.accession_id }<a href="JavaScript:Void(0);" class="vf-badge vf-badge--primary vf-badge--phases">alpha</a></h1>
                <h2 class="vf-intro__subheading">{image_study.title}</h2>
                <p class="studytitle">{image_dataset.title_id}</p>
                <a href={ "/bioimage-archive/dataset/" + image_study.accession_id}>
                    <button class="vf-button vf-button--primary vf-button--sm">Study Page</button>
                </a> 
            </div>
        </section>
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Image metadata</h3>

                <b>Physical Image size: </b> {format_physical_dimensions(interactive_image)}<br>
                <b>Pixel Image size: </b> {format_pixel_dimensions(interactive_image)}<br>
                {interactive_image.size_c != null && (<><b>Number of channels:</b> {interactive_image.size_c}<br/></>)}
                {interactive_image.size_t != null && (<><b>Number of timesteps:</b> {interactive_image.size_t}<br/></>)}
                {Object.entries(image.attribute).map(([key, value]) => (
                    <p>{key}: {value}</p>
                ))}
            </div>
            <div>
                <iframe style="width: 100%; height: 500px" name="vizarr" src={vizarr_iframe_source}></iframe>
            </div>
            <div>
                <h3>Access images</h3>
                License: {image_study.licence} <br/>
                <br/>
                <!-- <a href={image.vizarr_uri}>
                    <button class="vf-button vf-button--primary vf-button--sm">Download file</button>
                </a>  -->
                <button class="vf-button vf-button--primary vf-button--sm" id="CopyURLButton" data-url={interactive_image.file_uri[0]}>Copy OME-Zarr URI</button>
                <h3>Visualise</h3>
                <a href={vizarr_iframe_source}>
                    <button class="vf-button vf-button--primary vf-button--sm">Open in Vizarr viewer</button>
                </a>
                <a href={itk_link}>
                    <button class="vf-button vf-button--primary vf-button--sm">Open in ITK viewer</button>
                </a>

                <script>

                    let copyUrlButton = document.getElementById("CopyURLButton")
                    let originalText = copyUrlButton.innerText;
                    copyUrlButton.onclick=async() => {
                        await copyUrl(copyUrlButton.dataset.url, copyUrlButton, originalText);
                    };

                    async function copyUrl(url, button, originalText) {
                        await navigator.clipboard.writeText(url);
                        button.innerText = "URI Copied";
                        setTimeout(() => {
                            button.innerText = originalText;
                        }, 700);
                    }

                </script>
            </div>
        </section>

        <!-- TODO: Include links to source images using  <SourceImage image={ image}/> for derived images -->

        <hr/>

        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Study</h3>
            </div>
            <div style="overflow-wrap: anywhere;">
                <b>Title</b>: {image_study.title}<br/>
                <b>Description:</b> {image_study.description} <br/>
                <b>Licence:</b> {image_study.licence} <br/>
            </div>
        </section>

        <hr/>

        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Dataset</h3>
            </div>
            <div>
                <b>Title</b>: {image_dataset.title_id}<br/>
                <b>Description:</b> {image_dataset.description}<br/>
            </div> 
        </section>

        <hr/>
        
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Subject</h3>
            </div>
            <div>
            {
                specimen != null && "sample_of" in specimen &&
                    specimen.sample_of.length > 0 && (
                        <b>Biosamples:</b>
                        <ul>
                            {specimen.sample_of.map((biosample) => (
                                <DatasetDetail
                                    data={biosample}
                                    field_map={biosample_map}
                                />
                            ))}
                        </ul>
                    )
            }
            {
                specimen != null && "imaging_preparation_protocol" in specimen &&
                    specimen.imaging_preparation_protocol.length > 0 && (
                        <b>Specimen Preparation Protocols:</b>
                        <ul>
                            {specimen.imaging_preparation_protocol.map((sipp) => (
                                <DatasetDetail
                                    data={sipp}
                                    field_map={sipp_map}
                                />
                            ))}
                        </ul>
                    )
            }
            </div>
        </section>

        <hr/>

        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Creation</h3>
            </div>
            <div>
                {
                    "acquisition_process" in creation_process &&
                        creation_process.acquisition_process.length > 0 && (
                            <b>Image Acquisition Protocols:</b>
                            <ul>
                                {creation_process.acquisition_process.map(
                                    (image_acquisition) => (
                                        <DatasetDetail
                                            data={image_acquisition}
                                            field_map={image_acquisition_map}
                                        />
                                    ),
                                )}
                            </ul>
                        )
                }
                {
                    "annotation_method" in creation_process &&
                        creation_process.annotation_method.length > 0 && (
                            <b>Image Acquisition Protocols:</b>
                            <ul>
                                {creation_process.annotation_method.map(
                                    (annotation_method) => (
                                        <DatasetDetail
                                            data={annotation_method}
                                            field_map={image_acquisition_map}
                                        />
                                    ),
                                )}
                            </ul>
                        )
                }
                {
                    "protocol" in creation_process &&
                        creation_process.protocol.length > 0 && (
                            <b>Image Acquisition Protocols:</b>
                            <ul>
                                {creation_process.protocol.map(
                                    (protocol) => (
                                        <DatasetDetail
                                            data={protocol}
                                            field_map={protocol_map}
                                        />
                                    ),
                                )}
                            </ul>
                        )
                }
            </div>
        </section>
    </body>
</BaseLayout>
