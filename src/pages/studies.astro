---
export const prerender = false;
import BaseLayoutWithBreadcrumbs from '../layouts/BaseLayoutWithBreadcrumbs.astro';
import BrowseStudyHeading from '../components/BrowseStudiesHeading.astro';
import "../styles/toggle.css";
import "../styles/browse_controls.css";
import "../styles/filter_cards.css";
import studyMetadata from "../data/bia-study-metadata.json";
import SearchResults, { type SearchHits, type FacetData, type PaginationData } from "../components/search/Search.astro";
import { generateParamString } from "../components/search/Search.astro";
import { PUBLIC_SEARCH_API } from "astro:env/client";

const url = new URL(Astro.request.url);
const query = url.searchParams.get('query') || "";
const sortBy = url.searchParams.get('sortBy');
const sortOrder = url.searchParams.get('sortOrder');
const page = Number(url.searchParams.get('pagination.page')) || 1;
const organism = url.searchParams.getAll('facet.organism');
const imagingMethod = url.searchParams.getAll('facet.imaging_method');
const releaseYear = url.searchParams.getAll('facet.year');

let searchURL = "";
if (query || query === "") {
  searchURL = generateParamString(
    `${PUBLIC_SEARCH_API}/search/fts`,
    query,
    organism,
    imagingMethod,
    releaseYear,
    page
  );
}

let hits = {} as SearchHits;
let facetData = {} as FacetData;
let paginationData = {} as PaginationData;

let pageTitle = query.length === 0? "Browse Studies": "Search Studies"; 
if (query || query === "") {
  const res = await fetch(searchURL);
  if (res.ok) {
    const data = await res.json();
    hits = data.hits;
    facetData = data.facets;
    paginationData = data.pagination;
  }
}

const totalStudies = Object.values(studyMetadata).length;

const totalFiles = Object.values(studyMetadata).reduce((acc, study) => {
  const studyFiles = study.dataset?.reduce((fileAcc, component) => {
    return fileAcc + (component.file_reference_count || 0);
  }, 0) || 0;
  return acc + studyFiles;
}, 0);

const totalImages = Object.values(studyMetadata).reduce((acc, study) => {
  const studyImages = study.dataset?.reduce((imgAcc, component) => {
    return imgAcc + (component.image_count || 0);
  }, 0) || 0;
  return acc + studyImages;
}, 0);

const formattedTotalStudies = totalStudies.toLocaleString();
const formattedTotalFiles = totalFiles.toLocaleString();
const formattedTotalImages = totalImages.toLocaleString();
---
<BaseLayoutWithBreadcrumbs pageTitle={pageTitle}>
  <body>
  {query.length === 0 && (
      <BrowseStudyHeading heading="Browse the BioImage Archive" contributeLink={"/bioimage-archive/submit"}> 
        <div slot="body_text">
          <p class="vf-hero__text">We are currently working on processing all BioImage Archive studies in order to display and access their images in the web browser on this page. Current summary of metrics for this site is as follows: </p>
          <p></p>
          <p class="vf-hero__text">
            Number of Studies: {formattedTotalStudies}<br>
            Number of Files: {formattedTotalFiles}<br>
            Number of OME-NGFF Images: {formattedTotalImages}</p>
            <p></p>
            <p class="vf-hero__text">
          All studies (including ones not yet prepared for this site) can be found <a href="https://www.ebi.ac.uk/biostudies/BioImages/studies">here</a>.</p>
        </div>
      </BrowseStudyHeading>
    )
  }
  <SearchResults query={query} paginationData={paginationData} facetData={facetData} hits={hits} 
  organism={organism} imagingMethod={imagingMethod} releaseYear={releaseYear} 
  sortBy={sortBy} sortOrder={sortOrder} 
  page={page}/>
  </body>
</BaseLayoutWithBreadcrumbs>

<script type="module">
  var toggle = document.getElementById('image_toggle');

  toggle.addEventListener('change', (event) => {
    const sortBy = event.target.value;
    const url = new URL(window.location.href);
    url.searchParams.set('hasImages', toggle.checked);
    window.location.href = url.toString();
  });
</script>