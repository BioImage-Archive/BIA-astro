---
import BaseLayoutWithBreadcrumbs from "../../../../layouts/BaseLayoutWithBreadcrumbs.astro";
import StudyTitleInfo from "../../../../components/study-page/StudyTitleInfo.astro";

import exports from "../../../../data/old-export-format/bia-ai-export.json";
import studyImage from "../../../../assets/bioimage-archive/study.png";
import biosampleImage from "../../../../assets/bioimage-archive/biosample.png";
import imacqImage from "../../../../assets/bioimage-archive/im_acquisition.png";
import specimenImage from "../../../../assets/bioimage-archive/specimen.png";
import annotationsImage from "../../../../assets/bioimage-archive/annotations.png";

export function getStaticPaths() {
  return Object.values(exports["datasets"]).map((dataset) => {
    return {
      params: { accessionID: dataset.accession_id },
    };
  });
}

const tableOfContents = {
  "Study Information": "study",
  "Viewable Images": "viewable_images",
  "Viewable Annotations": "viewable_annotations",
  "All Images": "all_images",
  "All Annotations": "annotations",
};

const { accessionID } = Astro.params;
const study = exports["datasets"][accessionID];

const images = study.image_uuids.map((uuid) => exports["images"][uuid]);

const viewableNonAnnotationImages = study.image_uuids
  .filter((item) => !Object.values(study.annotation_images).includes(item))
  .map((uuid) => exports["images"][uuid]);

const viewable_annotation_images = study.image_uuids
  .filter((item) => Object.values(study.annotation_images).includes(item))
  .map((uuid) => exports["images"][uuid]);


const breadcrumbs = [
  "/bioimage-archive",
  "/bioimage-archive/galleries",
  "/bioimage-archive/galleries/ai",
  "/bioimage-archive/galleries/ai/ai-ready-studies",
]

---

<BaseLayoutWithBreadcrumbs pageTitle={study.accession_id} breadcrumbs={breadcrumbs}>
  <body>
    <StudyTitleInfo study_info={study} />

    <section class="vf-content | vf-sidebar vf-sidebar--start">
      <div class="vf-sidebar__inner">
        <div>
          <h2 class="vf-section-header__heading">On this page</h2>
          <ul class="vf-list">
            {
              Object.entries(tableOfContents).map(([text_title, id]) => (
                <li class="vf-list__item">
                  <a class="vf-list__link" href={"#" + id}>
                    {text_title}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
        <div style="display: flex; justify-content: space-evenly; flex-wrap: wrap;">
         
          <figure class="vf-figure">
            <img
              class="vf-figure__image"
              src={study.example_image_uri}
              alt="Example image for this dataset"
            />
            <figcaption class="vf-figure__caption">
              Example image for this dataset
            </figcaption>
          </figure>

          <figure class="vf-figure">
            <img
              class="vf-figure__image"
              src={study.example_annotation_uri}
              alt="Example annotation for this dataset"
            />
            <figcaption class="vf-figure__caption">
              Example annotation for this dataset
            </figcaption>
          </figure>
        </div>

      </div>
    </section>
  </body> 

  <section class="vf-content">
    <div class="vf-grid vf-grid__col-4">
      <div>Images<br /> {study.n_images}</div>
      <div>Annotations <br /> Not yet calculated</div>
      <div>Study Size <br /> Not yet calculated</div>
      <div>File Types <br /> Not yet calculated</div>
    </div>
  </section>

  <hr/>

  <section class="embl-grid embl-grid--has-centered-content">
    <div>
      <h2 class="vf-section-header__heading" id="study">Study Information</h2>
      <p>Complete metadata</p>
      <h3>Study</h3>
      <img src={studyImage.src} alt="Study" style="width: 60px" />
    </div>
    <div>
      <br />
      <br />
      <a href={study.links[0]["url"]}>
        <button class="vf-button vf-button--primary vf-button--sm"
          >Original submission page</button
        >
      </a>
      <p><b>Licence:</b> CC0</p>
      {
        study.models_description != null && (
          <p>
            <b>Models: </b> {study.models_description}
          </p>
        )
      }
    </div>
    <div></div>
  </section>

  <section class="embl-grid embl-grid--has-centered-content">
    <div>
      <h3>Biosample</h3>
      <img src={biosampleImage.src} alt="Biosample" style="width: 60px" />
    </div>
    <div>
      <br />
      <b>Organism: </b>
      {study.organism}
    </div>
    <div></div>
  </section>

  <section class="embl-grid embl-grid--has-centered-content">
    <div>
      <h3>Image Acquisition</h3>
      <img src={imacqImage.src} alt="Imaging" style="width: 60px" />
    </div>
    <div>
      <br />
      <b>Imaging method: </b>
      {study.imaging_type}
    </div>
    <div></div>
  </section>

  <hr/>

  <section class="vf-content | embl-grid embl-grid--has-centered-content">
    <div>
      <h3
        class="vf-section-header__heading"
        title="Annotation in the context of AI, is the task of marking up data, such as images, so it can be recognised by models and used to make predictions."
      >
        Annotations
      </h3>
      <br />
      <img src={annotationsImage.src} alt="Imaging" style="width: 60px" />
    </div>
    <div>
      <br/>
      <b
        ><a href={`/bioimage-archive/ai-glossary`} target="”_blank”"
          >Annotation type(s)</a
        >:
      </b><i
        class="fa-solid fa-circle-info"
        title="Click on the Annotation type(s) to go to the page with a glossary"
      ></i>
      {study.annotation_type}
      <br/>
      <b>Annotation method(s): </b>
      {study.annotation_method}
    </div>
  </section>

  <hr/>

  <section class="vf-content | embl-grid embl-grid--has-centered-content">
    <div>
      <h3 class="vf-section-header__heading">Viewable Images</h3>
    </div>
    <div>
      <table id="viewable_images" class="display">
        <thead class="vf-table__header">
          <tr>
            <th class="vf-table__heading" scope="col">Preview</th>
            <th class="vf-table__heading">Filename</th>
            <th class="vf-table__heading">Download Size</th>
            <th class="vf-table__heading">Actions</th>
          </tr>
        </thead>
        <tbody class="vf_table__body">
          {
            viewableNonAnnotationImages.map((image) => (
              <tr class="vf-table__row">
                <th>
                  <a href={"/bioimage-archive/galleries/ai/image/" + image.uuid}><img class="vf-figure__image" src={image.thumbnail_uri} /></a>
                </th>
                <th>{image.name}</th>
                <th>Unknown</th>
                <th>
                  <a href={"/bioimage-archive/galleries/ai/image/" + image.uuid}>View</a>
                </th>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </section>

  <hr/>

  <section
    class="vf-intro | embl-grid embl-grid--has-centered-content | section-spacing"
  >
    <div class="vf-section-header">
      <h3 class="vf-section-header__heading" id="annotations">
        Viewable Annotations
      </h3>
    </div>
    <div>
      <table id="viewable_annotations" class="display">
        <thead>
          <tr>
            <th>Preview</th>
            <th>Filename</th>
            <th>Download Size</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {
            viewable_annotation_images.map((image) => (
              <tr>
                <th>
                  <img class="vf-figure__image" src={image.thumbnail_uri} />
                </th>
                <th>{image.name}</th>
                <th>Unknown</th>
                <th>
                  <a href={"/bioimage-archive/galleries/ai/image/" + image.uuid}>View</a>
                  Download
                </th>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </section>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      $("#viewable_images").DataTable({
        scrollX: true,
        columnDefs: [{ type: "natural", targets: 0 }],
      });
      $("#viewable_annotations").DataTable({
        scrollX: true,
        columnDefs: [{ type: "natural", targets: 0 }],
      });
    });
  </script>
</BaseLayoutWithBreadcrumbs>


