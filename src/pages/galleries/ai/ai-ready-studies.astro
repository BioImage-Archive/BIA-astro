---
import BaseLayout from '../../../layouts/BaseLayoutWithBreadcrumbs.astro';
import BrowseDatasetHeading from '../../../components/BrowseStudiesHeading.astro';
import StudyCard from '../../../components/cards/BrowseStudyCard.astro';
import collection from '../../../data/collections/ai-ready-datasets.json';
import { getAnnotationType, getStudyFromApiByAccession} from "../../../components/SharedJSFunctions";
import { type Studies } from "../../../components/SharedInterface.astro"

const studiesEntries = await Promise.all(
  Object.values(collection.accession_ids).map(async (accessionID) => {
    const study = await getStudyFromApiByAccession(accessionID);
    return [accessionID, study] as const;
  })
);

const studyMetadata = Object.fromEntries(studiesEntries) as Studies;
---
<BaseLayout pageTitle={ collection.name }>
  <body>
    <BrowseDatasetHeading
    heading={collection.title }
    subheading={collection.subtitle}
    contribute_link={"/bioimage-archive/help/galleries-contribute"}
  > 
     <p class="vf-hero__text" slot="body_text">{ collection.description }</p>
  </BrowseDatasetHeading>

    <section class="vf-card-container vf-card-container__col-3 | vf-u-background-color-ui--white vf-u-fullbleed" style="--vf-card__image--aspect-ratio: 16 / 9;">
        <div class="vf-card-container__inner">
          { Object.values(studyMetadata).map((study) => ( <StudyCard study={study} studyPageRoot={`galleries/ai/ai-ready-study`} taglist={study.additional_metadata.find(md => md.name==="ai_tags")?.value?.ai_tags[0] || []} annotationType={getAnnotationType(study.dataset)} /> )) }
        </div>
    </section>
  </body>
</BaseLayout>