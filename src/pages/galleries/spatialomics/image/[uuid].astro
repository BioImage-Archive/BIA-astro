---
import BaseLayoutWithBreadcrumbs from '../../../../layouts/BaseLayoutWithBreadcrumbs.astro';
import SourceImage from "../../../../components/SourceImage.astro"
import WebsiteStateButton from '../../../../components/WebsiteStateButton.astro';

import exports from "../../../../data/old-export-format/bia-images-export.json";
import studyData from "../../../../data/old-export-format/bia-export.json";
import AIStudyData from "../../../../data/old-export-format/bia-ai-export.json";
import SpatialomicsStudyData from "../../../../data/old-export-format/bia-spatialomics-export.json";


export function getStaticPaths() {
  return Object.keys(exports["images"]).map((uuid) => {
    return {
      params:  { uuid: uuid }
    };
  });
}

const { uuid } = Astro.params;

const image = exports["images"][uuid];

const tissue_x = (1e6 * image.PhysicalSizeX * image.sizeX).toPrecision(2);
const tissue_y = (1e6 * image.PhysicalSizeY * image.sizeY).toPrecision(2);


function getStudyData(accessionID, StudyData, AIStudyData, SpatialomicsStudyData) {
    if (accessionID in StudyData["datasets"]) {
        return StudyData["datasets"][accessionID]
    } else if (accessionID in AIStudyData["datasets"]) {
        return AIStudyData["datasets"][accessionID]
    } else if (accessionID in SpatialomicsStudyData["datasets"]) {
        return SpatialomicsStudyData["datasets"][accessionID]
    }
}

const study_info = getStudyData(image.study_accession_id, studyData, AIStudyData, SpatialomicsStudyData)

const base_img_s3_url = image.vizarr_uri.replace('https://uk1s3.embassy.ebi.ac.uk/bia-zarr-test/vizarr/index.html?source=','')

const breadcrumbs = [
  "/bioimage-archive",
  "/bioimage-archive/galleries",
  "/bioimage-archive/galleries/spatialomics",
  `/bioimage-archive/galleries/spatialomics/study/${image.study_accession_id}`,
]

---

<BaseLayoutWithBreadcrumbs pageTitle={image["alias"]} breadcrumbs={breadcrumbs}>
    <div class="vf-stack vf-stack--500">
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div></div>
            <div>
                <h1 class="vf-intro__heading vf-intro__heading--has-tag">{ image.study_accession_id }:{ image.alias }
                    <WebsiteStateButton/>
                </h1>
                <h2 class="vf-intro__subheading">{image.name}</h2>
                {image.original_relpath}
                <p class="studytitle">{image.study_title}</p>
            </div>
            <div>
                Released {image.release_date}<br>
                Modified 2023-05-07
            </div>
        </section>
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Image metadata</h3>
                <b>Image size: </b> {tissue_x}μm x {tissue_y}μm<br>
                {image.sizeX} x {image.sizeY} pixels<br />
                {image.sizeC} channels
                <br /> <br />
                {Object.entries(image.attributes).map(([key, value]) => (
                    <p>{key}: {value}</p>
                ))}
            </div>
            <div>
                <iframe style="width: 100%; height: 500px" name="vizarr" src={image.vizarr_uri}></iframe>
            </div>
            <div>
                <h3>Access images</h3>
                License: CC0 <br/>
                <br/>
                <a href={"/bioimage-archive/help/downloading-data#aws_client_download"}>How to download this image</a>
                <br/>
                <br/>

                <button class="vf-button vf-button--primary vf-button--sm" id="CopyURLButton" data-url={base_img_s3_url}>Copy OME-Zarr URI</button>
                <h3>Visualise</h3>
                <a href={image.vizarr_uri}>
                    <button class="vf-button vf-button--primary vf-button--sm">Open in Vizarr viewer</button>
                </a>
                <a href={image.itk_uri}>
                    <button class="vf-button vf-button--primary vf-button--sm">Open in ITK viewer</button>
                </a>

                <script>

                    let copyUrlButton = document.getElementById("CopyURLButton")
                    let originalText = copyUrlButton.innerText;
                    copyUrlButton.onclick=async() => {
                        await copyUrl(copyUrlButton.dataset.url, copyUrlButton, originalText);
                    };

                    async function copyUrl(url, button, originalText) {
                        await navigator.clipboard.writeText(url);
                        button.innerText = "URI Copied";
                        setTimeout(() => {
                            button.innerText = originalText;
                        }, 700);
                    }

                </script>
            </div>
        </section>
        { ( image.source_image_uuid != null ) &&
            <SourceImage image={ image} />
        }
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Study</h3>
            </div>
            <div><b>Title:</b> {image.study_title}</div>
            <div></div>
        </section>
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Biosample</h3>
            </div>
            <div>
                <b>Organism:</b> {study_info.organism}<br>
                <b>Biological entity: </b>
            </div>
            <div></div>
        </section>
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Specimen</h3>
            </div>
            <div>
                <b>Sample preparation:</b> <br>
            </div>
            <div></div>
        </section>
        <section class="vf-content | embl-grid embl-grid--has-centered-content">
            <div>
                <h3>Image acquisition</h3>
            </div>
            <div>
                <b>Imaging Method:</b> <br>
            </div>
            <div></div>
        </section>
</BaseLayout>
